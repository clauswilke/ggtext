1
00:00:05,628 --> 00:00:06,670
CLAUS WILKE: Yeah, hello.

2
00:00:06,670 --> 00:00:07,730
It's great to be here.

3
00:00:07,730 --> 00:00:09,350
My name is Claus Wilke.

4
00:00:09,350 --> 00:00:11,710
I'm with the University
of Texas at Austin.

5
00:00:11,710 --> 00:00:14,620
And today I'm talking
about work that

6
00:00:14,620 --> 00:00:17,800
has been sponsored
by the R Consortium,

7
00:00:17,800 --> 00:00:21,130
that slide there prominently
featured in the bottom.

8
00:00:21,130 --> 00:00:25,090
And it's about improving
text rendering in ggplot.

9
00:00:25,090 --> 00:00:28,360
So a common problem
that probably

10
00:00:28,360 --> 00:00:30,760
all of you at some
point have run into

11
00:00:30,760 --> 00:00:35,410
is you may want to mix italics
and normal text in ggplot.

12
00:00:35,410 --> 00:00:38,170
So in my day work,
I'm a biologist,

13
00:00:38,170 --> 00:00:40,840
so it's a very common
problem for biologists.

14
00:00:40,840 --> 00:00:44,020
You have species names that
are supposed to be in italics,

15
00:00:44,020 --> 00:00:46,120
but then you have other
text surrounding it

16
00:00:46,120 --> 00:00:47,870
that shouldn't be in italics.

17
00:00:47,870 --> 00:00:49,900
So how can we make that happen?

18
00:00:49,900 --> 00:00:54,820
And so just to give you an
example of how that may arise,

19
00:00:54,820 --> 00:00:58,690
here's a Stack Overflow issue
that's asking that question.

20
00:00:58,690 --> 00:01:01,630
For my plot figure, I want to
label the categories on a bar

21
00:01:01,630 --> 00:01:03,780
plot with the first
word being italicized

22
00:01:03,780 --> 00:01:06,760
while the following
words are not italicized.

23
00:01:06,760 --> 00:01:09,320
I want the category
labels to look as follows.

24
00:01:09,320 --> 00:01:11,650
And so there's a
typical biology example.

25
00:01:11,650 --> 00:01:13,150
There's a bacterial name.

26
00:01:13,150 --> 00:01:14,890
I'm not trying to pronounce it.

27
00:01:14,890 --> 00:01:18,910
And then OTU 1 operational
taxonomic unit--

28
00:01:18,910 --> 00:01:20,410
that's a biology term.

29
00:01:20,410 --> 00:01:22,900
But in any case, this
should be italics.

30
00:01:22,900 --> 00:01:24,250
This should not be italics.

31
00:01:24,250 --> 00:01:26,170
All right?

32
00:01:26,170 --> 00:01:29,410
So let's look a little
more into the example code

33
00:01:29,410 --> 00:01:32,360
and data that comes
with this issue.

34
00:01:32,360 --> 00:01:36,490
So there's a made-up data
set that the person provided.

35
00:01:36,490 --> 00:01:38,830
We have, in the first
column, the name

36
00:01:38,830 --> 00:01:40,330
of the bacterial species.

37
00:01:40,330 --> 00:01:42,560
Then we have these OTUs.

38
00:01:42,560 --> 00:01:44,800
Then we have a name
column that combines

39
00:01:44,800 --> 00:01:47,290
the bacterial
species and the OTUs,

40
00:01:47,290 --> 00:01:49,700
and then we have
some numeric value.

41
00:01:49,700 --> 00:01:51,880
And so the person
was turning this

42
00:01:51,880 --> 00:01:56,310
into a bar plot with just
three lines of ggplot.

43
00:01:56,310 --> 00:02:02,260
You take the data, pipe it into
ggplot, put name on x and value

44
00:02:02,260 --> 00:02:04,250
on y, but then we
flip the coordinates

45
00:02:04,250 --> 00:02:06,010
so we get a horizontal plot.

46
00:02:06,010 --> 00:02:08,199
And of course, you see
the problem in this plot

47
00:02:08,199 --> 00:02:11,870
is that the bacteria
names are not in italics.

48
00:02:11,870 --> 00:02:13,800
So how can we
solve that problem?

49
00:02:13,800 --> 00:02:17,260
Now, the common solution
that you will find for that

50
00:02:17,260 --> 00:02:20,260
is some sort of plot math.

51
00:02:20,260 --> 00:02:23,920
So this is the accepted
solution on Stack Overflow.

52
00:02:23,920 --> 00:02:25,720
You can make a
vector of expressions

53
00:02:25,720 --> 00:02:29,260
and apply it to the labels
argument and scale x discrete.

54
00:02:29,260 --> 00:02:32,140
And so the code that
makes the magic happen

55
00:02:32,140 --> 00:02:33,790
is this code here--

56
00:02:33,790 --> 00:02:37,210
quote italic, parentheses,
single quote, double quote,

57
00:02:37,210 --> 00:02:41,230
comma, x bracket 1.

58
00:02:41,230 --> 00:02:42,880
I cannot write that code.

59
00:02:42,880 --> 00:02:45,610
I'm sure there's people in this
room who can write that code,

60
00:02:45,610 --> 00:02:48,680
and I salute you.

61
00:02:48,680 --> 00:02:50,620
I cannot, and I don't want to.

62
00:02:53,420 --> 00:02:56,960
I would rather write my own
text rendering software in C++.

63
00:03:00,532 --> 00:03:01,740
And so that's what I've done.

64
00:03:04,540 --> 00:03:06,040
OK.

65
00:03:06,040 --> 00:03:09,610
But that leads us to the
question, so how should

66
00:03:09,610 --> 00:03:12,020
we specify formatted text?

67
00:03:12,020 --> 00:03:15,220
So let's make first a
slightly simple example.

68
00:03:15,220 --> 00:03:19,440
Instead of the axis tick labels,
let's just look at the title.

69
00:03:19,440 --> 00:03:20,260
OK.

70
00:03:20,260 --> 00:03:23,530
I want a title "species
names are in italics,"

71
00:03:23,530 --> 00:03:25,750
and italics should
be in italics.

72
00:03:25,750 --> 00:03:27,490
And maybe I've
already given it away.

73
00:03:27,490 --> 00:03:30,340
So I put italics in stars.

74
00:03:30,340 --> 00:03:34,260
Anybody that has used
Markdown knows this, right?

75
00:03:34,260 --> 00:03:37,580
If you're using R Markdown, if
you want something in italics,

76
00:03:37,580 --> 00:03:39,680
you put stars around it.

77
00:03:39,680 --> 00:03:44,380
And so that's what this
package, ggtext, facilitates.

78
00:03:44,380 --> 00:03:47,350
So as of right now, it's
still in development.

79
00:03:47,350 --> 00:03:50,240
You have to install
it from GitHub.

80
00:03:50,240 --> 00:03:52,360
But it's essentially
ready to go.

81
00:03:52,360 --> 00:03:54,720
It's just waiting for the
next release of ggplot.

82
00:03:54,720 --> 00:03:58,482
So sometime within the
next two to three months,

83
00:03:58,482 --> 00:03:59,440
this should be on CRAN.

84
00:03:59,440 --> 00:04:01,480
So I've now loaded the package.

85
00:04:01,480 --> 00:04:03,760
Nothing has happened
yet because I haven't

86
00:04:03,760 --> 00:04:06,160
changed anything in the code.

87
00:04:06,160 --> 00:04:10,150
It wouldn't be good if
just randomly, stars were

88
00:04:10,150 --> 00:04:12,430
interpreted as markdown,
because maybe sometimes you

89
00:04:12,430 --> 00:04:15,070
actually want to have
stars in your text.

90
00:04:15,070 --> 00:04:17,680
So we have to tell
ggplot that now it should

91
00:04:17,680 --> 00:04:19,360
interpret this as markdown.

92
00:04:19,360 --> 00:04:24,400
And so I've hooked this up with
a theme system so that now--

93
00:04:24,400 --> 00:04:26,620
if you've ever used
themes in ggplot,

94
00:04:26,620 --> 00:04:32,670
usually plot.title tells us
how the title of the plot

95
00:04:32,670 --> 00:04:33,360
is styled.

96
00:04:33,360 --> 00:04:35,400
And normally, you would
write element_text(),

97
00:04:35,400 --> 00:04:38,370
and then you can use that to
change the color, and so on.

98
00:04:38,370 --> 00:04:40,440
And now I've written
this element_markdown(),

99
00:04:40,440 --> 00:04:43,620
and so now you see this has
been interpreted as markdown.

100
00:04:43,620 --> 00:04:47,860
And so now "in
italics" is in italics.

101
00:04:47,860 --> 00:04:48,930
OK.

102
00:04:48,930 --> 00:04:53,740
So now let's apply this
to the original problem.

103
00:04:53,740 --> 00:04:56,730
So the additional
issue here now is

104
00:04:56,730 --> 00:04:59,190
that we have these
different species names,

105
00:04:59,190 --> 00:05:02,340
and we don't want to
manually put them into stars.

106
00:05:02,340 --> 00:05:03,760
We want to automate that.

107
00:05:03,760 --> 00:05:04,260
Right?

108
00:05:04,260 --> 00:05:08,430
And so there, a really,
really good companion package

109
00:05:08,430 --> 00:05:09,810
is the glue package.

110
00:05:09,810 --> 00:05:12,270
If you're not
routinely using glue,

111
00:05:12,270 --> 00:05:14,220
I encourage you to look into it.

112
00:05:14,220 --> 00:05:19,830
Glue allows you to very quickly
paste pieces from your data

113
00:05:19,830 --> 00:05:22,230
frame into strings of text.

114
00:05:22,230 --> 00:05:27,710
So I'm taking the data
here, pipe into mutate,

115
00:05:27,710 --> 00:05:31,610
and then I create a new name
column where I call glue.

116
00:05:31,610 --> 00:05:35,270
And then here I have this
star, and then bactname

117
00:05:35,270 --> 00:05:39,030
is the column name that has the
bacterial name in curly braces.

118
00:05:39,030 --> 00:05:43,130
And that tells glue don't
write bactname into the string,

119
00:05:43,130 --> 00:05:45,020
but actually pull it
from the data frame,

120
00:05:45,020 --> 00:05:47,300
and then here the
same with OTUname.

121
00:05:47,300 --> 00:05:49,400
And so that now
creates this table,

122
00:05:49,400 --> 00:05:51,860
where now you see
I have nice stars

123
00:05:51,860 --> 00:05:53,930
around the bacterial names.

124
00:05:53,930 --> 00:05:56,390
And so now I pipe
this into ggplot

125
00:05:56,390 --> 00:05:57,950
with the element markdown.

126
00:05:57,950 --> 00:06:02,780
So now it's, of
course, the axis.text.y

127
00:06:02,780 --> 00:06:04,130
that I want to change.

128
00:06:04,130 --> 00:06:08,260
And now you see
this is in italics.

129
00:06:08,260 --> 00:06:09,350
This is not.

130
00:06:09,350 --> 00:06:14,250
[APPLAUSE]

131
00:06:15,500 --> 00:06:16,000
OK.

132
00:06:16,000 --> 00:06:17,335
I see this solves a problem.

133
00:06:20,180 --> 00:06:20,680
OK.

134
00:06:20,680 --> 00:06:22,870
So now you might say, OK.

135
00:06:22,870 --> 00:06:24,160
Your plots are boring.

136
00:06:24,160 --> 00:06:26,410
Don't you ever use color?

137
00:06:26,410 --> 00:06:27,440
I do.

138
00:06:27,440 --> 00:06:27,940
I do.

139
00:06:27,940 --> 00:06:32,020
So let's do
something with color.

140
00:06:32,020 --> 00:06:36,640
Actually, let's
add a color column.

141
00:06:36,640 --> 00:06:39,165
I'm doing a little bit of
a trick, so if Hadley--

142
00:06:39,165 --> 00:06:40,540
Hadley is not in
the room, right?

143
00:06:40,540 --> 00:06:43,390
He would say, you're
circumventing the scale

144
00:06:43,390 --> 00:06:43,970
system.

145
00:06:43,970 --> 00:06:44,470
Yes.

146
00:06:44,470 --> 00:06:46,330
In this case, that's
the right way to do it.

147
00:06:46,330 --> 00:06:49,240
So I'm adding--

148
00:06:49,240 --> 00:06:51,700
I'm adding a color
vector, so these are just

149
00:06:51,700 --> 00:06:54,100
colors that I chose..

150
00:06:54,100 --> 00:06:55,135
And now what I'm--

151
00:06:55,135 --> 00:06:57,370
I'm still using
glue, but now you

152
00:06:57,370 --> 00:07:01,150
may see here I'm actually
writing a little bit of HTML.

153
00:07:01,150 --> 00:07:06,950
So this is the italics tag now,
and I'm using inline styling

154
00:07:06,950 --> 00:07:09,220
to get the color in there.

155
00:07:09,220 --> 00:07:13,295
And with that, I can
actually have now colors.

156
00:07:20,110 --> 00:07:21,700
So the trick that
I'm using here is

157
00:07:21,700 --> 00:07:24,170
I'm using scale_fill_identity().

158
00:07:24,170 --> 00:07:27,040
So I'm mapping color
onto fill, and then 

159
00:07:27,040 --> 00:07:30,640
scale_fill_identity(), instead of trying
to set up a color mapping,

160
00:07:30,640 --> 00:07:34,610
it just takes the actual
colors that are in the column.

161
00:07:34,610 --> 00:07:36,610
Now, one other thing
that you may notice--

162
00:07:36,610 --> 00:07:39,700
it's a topic that is
very dear to my heart.

163
00:07:39,700 --> 00:07:42,790
You may notice that
visually, these colors

164
00:07:42,790 --> 00:07:44,830
and these colors look
kind of the same,

165
00:07:44,830 --> 00:07:47,110
Right they match very well.

166
00:07:47,110 --> 00:07:51,580
But I'm actually setting the
transparency to 0.5 here.

167
00:07:51,580 --> 00:07:56,630
So the bars are actually
at 50% transparency,

168
00:07:56,630 --> 00:07:59,270
and then they look
the same as the text,

169
00:07:59,270 --> 00:08:01,870
which is completely opaque.

170
00:08:01,870 --> 00:08:04,120
And that's just how our
visual system works.

171
00:08:04,120 --> 00:08:08,480
When you color large areas, you
need the color to be lighter.

172
00:08:08,480 --> 00:08:09,940
It's a very common
problem that I

173
00:08:09,940 --> 00:08:14,410
see when people color text that
the text becomes too light.

174
00:08:14,410 --> 00:08:18,010
The text always needs
to use a darker color

175
00:08:18,010 --> 00:08:22,800
to look the same as a large
area that you color the same.

176
00:08:22,800 --> 00:08:24,610
So this worked out well.

177
00:08:24,610 --> 00:08:26,850
So if you make the
color 50% transparent,

178
00:08:26,850 --> 00:08:29,910
it's going to be about right.

179
00:08:29,910 --> 00:08:30,870
OK.

180
00:08:30,870 --> 00:08:36,200
So now we're getting
ambitious, right?

181
00:08:36,200 --> 00:08:39,289
What else can I do?

182
00:08:39,289 --> 00:08:41,720
So this is another issue
from Stack Overflow.

183
00:08:41,720 --> 00:08:43,460
It's another biological problem.

184
00:08:43,460 --> 00:08:45,950
So it's made-up data.

185
00:08:45,950 --> 00:08:48,780
The key thing here is
there are these phases.

186
00:08:48,780 --> 00:08:51,280
So these are phases
of cell division--

187
00:08:51,280 --> 00:08:53,030
again, a biological example.

188
00:08:53,030 --> 00:08:55,820
And so this person had
these different images.

189
00:08:55,820 --> 00:08:58,280
And so this image
corresponds to this phase.

190
00:08:58,280 --> 00:09:00,920
This image corresponds
to this phase, and so on.

191
00:09:00,920 --> 00:09:03,200
And so the question
was, can we somehow

192
00:09:03,200 --> 00:09:06,630
get the images into the figure?

193
00:09:06,630 --> 00:09:08,780
And we can.

194
00:09:08,780 --> 00:09:12,730
So now we're using the image
tag where we're loading

195
00:09:12,730 --> 00:09:15,320
or we're setting the images.

196
00:09:15,320 --> 00:09:18,840
So in this particular case, it's
in a folder on my hard drive,

197
00:09:18,840 --> 00:09:21,980
but you can pull them from
a web page if you want.

198
00:09:21,980 --> 00:09:23,070
That works just fine.

199
00:09:23,070 --> 00:09:26,300
We put a break tag
and then the word,

200
00:09:26,300 --> 00:09:28,250
and we stick it into ggplot.

201
00:09:28,250 --> 00:09:30,320
The only other thing
is lineheight.

202
00:09:30,320 --> 00:09:33,410
The default lineheight, for
some reason, is just too low.

203
00:09:33,410 --> 00:09:34,460
It's 0.9.

204
00:09:34,460 --> 00:09:36,350
I don't know why.

205
00:09:36,350 --> 00:09:38,840
1.2 is a better line
height if you actually want

206
00:09:38,840 --> 00:09:40,670
to have things in two lines.

207
00:09:40,670 --> 00:09:42,060
And there we go.

208
00:09:42,060 --> 00:09:48,524
We have the images in the
axis and the label underneath.

209
00:09:48,524 --> 00:09:53,710
[APPLAUSE]

210
00:09:53,710 --> 00:09:55,475
I see this solves
another problem.

211
00:09:55,475 --> 00:09:57,600
Very good.

212
00:09:57,600 --> 00:10:02,020
There's a few other
things that it can do.

213
00:10:02,020 --> 00:10:04,930
So there's actually the
option to have text boxes

214
00:10:04,930 --> 00:10:07,660
with some amount
of text wrapping.

215
00:10:07,660 --> 00:10:09,940
And you can color
the background.

216
00:10:12,680 --> 00:10:16,800
If you go to the website, which
is in the bottom right corner,

217
00:10:16,800 --> 00:10:21,170
you can see the code that
makes this particular figure.

218
00:10:21,170 --> 00:10:21,780
OK.

219
00:10:21,780 --> 00:10:25,850
So everything I've shown so
far is theme elements, right?

220
00:10:25,850 --> 00:10:27,600
Does this only work
for theme elements?

221
00:10:27,600 --> 00:10:28,100
No.

222
00:10:28,100 --> 00:10:30,830
I also have written
a geom that you

223
00:10:30,830 --> 00:10:34,650
can use to use the same
text rendering in a plot.

224
00:10:34,650 --> 00:10:37,280
So let's do another
common situation.

225
00:10:37,280 --> 00:10:41,290
So this is the iris dataset,
which I assume everybody knows.

226
00:10:41,290 --> 00:10:44,680
So we have three
species of iris flowers.

227
00:10:44,680 --> 00:10:47,330
We're plotting the sepal
width against the sepal length

228
00:10:47,330 --> 00:10:50,840
for the three species, and we
are putting regression lines

229
00:10:50,840 --> 00:10:52,070
in here.

230
00:10:52,070 --> 00:10:56,690
And so oftentimes, when
you have a plot like that,

231
00:10:56,690 --> 00:11:00,560
you may want to annotate
this with, say, the r squared

232
00:11:00,560 --> 00:11:02,090
of the regression line.

233
00:11:02,090 --> 00:11:02,660
Right?

234
00:11:02,660 --> 00:11:04,310
And so it's again the problem--

235
00:11:04,310 --> 00:11:09,260
OK, how do I get the r squared
into some plot math expression

236
00:11:09,260 --> 00:11:12,650
that then I can add to the plot?

237
00:11:12,650 --> 00:11:16,160
And so we'll, instead
of doing that,

238
00:11:16,160 --> 00:11:17,450
use the same technique here.

239
00:11:17,450 --> 00:11:19,690
So let's just go through
the code quickly.

240
00:11:19,690 --> 00:11:22,430
So first we calculate
the correlation.

241
00:11:22,430 --> 00:11:25,400
So we take the iris
dataset, group by species,

242
00:11:25,400 --> 00:11:27,530
summarize, calculate
the r squared.

243
00:11:27,530 --> 00:11:30,710
So then we end up with a
table that has the species

244
00:11:30,710 --> 00:11:33,190
names and the r squared, right?

245
00:11:33,190 --> 00:11:36,990
And now we turn this
into our labels.

246
00:11:36,990 --> 00:11:39,923
So this sepal length and
sepal width, 8 and 4.5,

247
00:11:39,923 --> 00:11:41,840
those are just the
coordinates where the label

248
00:11:41,840 --> 00:11:43,220
will appear in the plot.

249
00:11:43,220 --> 00:11:45,420
And then again, I use
the glue function.

250
00:11:45,420 --> 00:11:48,560
So I have R in
star, so it's going

251
00:11:48,560 --> 00:11:51,470
to be italics,
superscript 2 because it's

252
00:11:51,470 --> 00:11:53,100
going to be r squared.

253
00:11:53,100 --> 00:11:55,745
And here I'm pasting in the
correlation coefficient,

254
00:11:55,745 --> 00:11:57,780
and I round
it to two digits.

255
00:11:57,780 --> 00:12:01,220
So in the glue package
inside the square brackets,

256
00:12:01,220 --> 00:12:03,230
you can just write
regular R code,

257
00:12:03,230 --> 00:12:04,970
and it gets executed
and replaced

258
00:12:04,970 --> 00:12:07,190
by the resulting string.

259
00:12:07,190 --> 00:12:14,420
And then this goes into ggplot
into a geom_richtext() which

260
00:12:14,420 --> 00:12:18,350
takes the label and
interprets it as HTML,

261
00:12:18,350 --> 00:12:21,780
and so now you have
here this label,

262
00:12:21,780 --> 00:12:24,170
r squared equals whatever.

263
00:12:24,170 --> 00:12:28,250
So by default, it puts a white
background and a box around it,

264
00:12:28,250 --> 00:12:29,600
but all of that you can change.

265
00:12:29,600 --> 00:12:31,640
You can take the box
away if you want.

266
00:12:31,640 --> 00:12:34,830
You can put a different
background, and so on.

267
00:12:34,830 --> 00:12:37,790
So that's really all I can do.

268
00:12:37,790 --> 00:12:41,490
However, there's actually two
packages that I've written.

269
00:12:41,490 --> 00:12:44,240
So this package was
the ggtext package

270
00:12:44,240 --> 00:12:48,660
which provides the
interface to ggplot,

271
00:12:48,660 --> 00:12:52,030
but it's really just the wrapper
around an underlying package,

272
00:12:52,030 --> 00:12:54,510
so the package that
makes it all possible.

273
00:12:54,510 --> 00:12:59,750
And that already is on CRAN,
and that's the gridtext package.

274
00:12:59,750 --> 00:13:02,930
And so that is a great
package if you're actually

275
00:13:02,930 --> 00:13:06,650
writing grid graphics codes-- so
for example, if you're writing

276
00:13:06,650 --> 00:13:08,780
your own ggplot extensions.

277
00:13:08,780 --> 00:13:12,590
And I've made it
so that if you're

278
00:13:12,590 --> 00:13:14,330
used to writing
grid code, it should

279
00:13:14,330 --> 00:13:16,460
be very easy to use
the gridtext package.

280
00:13:16,460 --> 00:13:20,070
So if you've never seen grid
code, this may look scary.

281
00:13:20,070 --> 00:13:22,770
But if you have seen grid code,
this should be very familiar.

282
00:13:22,770 --> 00:13:26,660
So this is, so far,
just regular grid.

283
00:13:26,660 --> 00:13:30,800
I have some text here,
then I set up grid graphics

284
00:13:30,800 --> 00:13:33,110
parameters, so gpar
graphics parameters.

285
00:13:33,110 --> 00:13:37,460
And I'm using a silly font with
some font size and a color.

286
00:13:37,460 --> 00:13:40,910
And then I created
textGrob, grob stands

287
00:13:40,910 --> 00:13:45,170
for graphics object,
text, the coordinates, x

288
00:13:45,170 --> 00:13:48,590
and y, horizontal justification
in the graphics parameters,

289
00:13:48,590 --> 00:13:52,040
and then I call the grid.draw()
function to draw it,

290
00:13:52,040 --> 00:13:54,110
and I get this outcome.

291
00:13:54,110 --> 00:13:54,860
OK.

292
00:13:54,860 --> 00:13:58,820
And so now, in addition,
I draw the same string,

293
00:13:58,820 --> 00:14:03,150
but using the richtext drawing
function from gridtext.

294
00:14:03,150 --> 00:14:05,130
And so it looks like this.

295
00:14:05,130 --> 00:14:10,130
So now I have richtext_grob()
text, coordinates, hjust, gp.

296
00:14:10,130 --> 00:14:12,870
So it looks exactly the same.

297
00:14:12,870 --> 00:14:14,820
I put a different
coordinate here

298
00:14:14,820 --> 00:14:18,330
so they are in
different y locations.

299
00:14:18,330 --> 00:14:21,150
This is why this is
at 0.7, this is 0.4.

300
00:14:21,150 --> 00:14:23,490
But you can actually plot
them on top of each other,

301
00:14:23,490 --> 00:14:26,780
and they should pretty
much look exactly the same,

302
00:14:26,780 --> 00:14:27,780
and then you just draw it.

303
00:14:30,720 --> 00:14:31,590
OK.

304
00:14:31,590 --> 00:14:35,640
And that's it, actually.

305
00:14:35,640 --> 00:14:38,370
I want to end with
one word of caution.

306
00:14:38,370 --> 00:14:41,610
So you may now think, oh,
great, I can do anything.

307
00:14:45,920 --> 00:14:46,970
That is not true.

308
00:14:46,970 --> 00:14:50,680
You can pretty much do exactly
what I showed you and not more.

309
00:14:55,600 --> 00:15:03,130
So the issue is that I'm
not handing off the HTML

310
00:15:03,130 --> 00:15:07,750
to a web browser that renders
it or some professional text

311
00:15:07,750 --> 00:15:08,920
rendering library.

312
00:15:08,920 --> 00:15:11,980
For technical reasons,
there's just no good way right

313
00:15:11,980 --> 00:15:13,340
now to achieve that.

314
00:15:13,340 --> 00:15:17,180
So I had to write my own
rendering engine from scratch.

315
00:15:17,180 --> 00:15:22,750
And so my approach was, OK,
what are the five things that I

316
00:15:22,750 --> 00:15:25,420
can implement in a
reasonable amount of time

317
00:15:25,420 --> 00:15:27,520
that really, really
make a difference?

318
00:15:27,520 --> 00:15:30,910
And the number one
is italics and bold.

319
00:15:30,910 --> 00:15:33,070
The number two is colors.

320
00:15:33,070 --> 00:15:35,650
Number three is being
able to change fonts,

321
00:15:35,650 --> 00:15:38,590
so you can change a different
font if you want to.

322
00:15:38,590 --> 00:15:41,050
Number four is superscript
and subscripts,

323
00:15:41,050 --> 00:15:44,080
and then number five is images.

324
00:15:44,080 --> 00:15:47,140
So that's where I currently am.

325
00:15:47,140 --> 00:15:48,870
You can do a lot with that.

326
00:15:48,870 --> 00:15:53,320
But just this morning,
I got this bug report

327
00:15:53,320 --> 00:15:56,860
that I was waiting for which
listed 100 markdown features

328
00:15:56,860 --> 00:15:59,290
that don't currently work.

329
00:15:59,290 --> 00:16:00,310
Yes, I know.

330
00:16:00,310 --> 00:16:03,220
They don't currently work.

331
00:16:03,220 --> 00:16:08,680
The truth is, my vision is to
increase the number of features

332
00:16:08,680 --> 00:16:09,910
that we support.

333
00:16:09,910 --> 00:16:12,790
At this point, we have
a good user interface

334
00:16:12,790 --> 00:16:14,800
that I think will remain stable.

335
00:16:14,800 --> 00:16:17,830
And so I can now
keep adding features.

336
00:16:17,830 --> 00:16:19,900
And just eventually,
at some point,

337
00:16:19,900 --> 00:16:22,750
certain things may work
that right now don't work.

338
00:16:22,750 --> 00:16:26,230
But anything that works now
should continue to work.

339
00:16:26,230 --> 00:16:28,810
And the R code-- sorry--
the R code should not

340
00:16:28,810 --> 00:16:30,710
change going forward.

341
00:16:30,710 --> 00:16:36,672
So with that, make plots
with formatted text.

342
00:16:36,672 --> 00:16:40,640
[APPLAUSE]

343
00:16:44,248 --> 00:16:45,790
Do you want to
take some questions?

344
00:16:45,790 --> 00:16:46,350
Yeah, yeah.

345
00:16:46,350 --> 00:16:46,860
All right, great.

346
00:16:46,860 --> 00:16:48,443
We have a couple
minutes for questions

347
00:16:48,443 --> 00:16:52,210
here, so let me
go down the list.

348
00:16:52,210 --> 00:16:54,630
All right.

349
00:16:54,630 --> 00:16:56,280
There were a lot of
questions in here

350
00:16:56,280 --> 00:16:59,520
that you just covered at
the end, like what else,

351
00:16:59,520 --> 00:17:00,510
what else is available.

352
00:17:00,510 --> 00:17:02,630
So I will scroll through those.

353
00:17:02,630 --> 00:17:04,380
Do you have any
thoughts on adding

354
00:17:04,380 --> 00:17:09,540
shorthand markdown-ish syntactic
sugar around the HTML tags

355
00:17:09,540 --> 00:17:12,530
for this work?

356
00:17:12,530 --> 00:17:15,819
I'm not sure I
understand the question.

357
00:17:15,819 --> 00:17:18,290
So the way that this
whole thing works

358
00:17:18,290 --> 00:17:21,650
is it actually-- it
takes the markdown.

359
00:17:21,650 --> 00:17:25,250
It sends it through the
regular markdown package that

360
00:17:25,250 --> 00:17:28,430
is part of R, which
turns it into HTML,

361
00:17:28,430 --> 00:17:31,880
and then the HTML gets rendered.

362
00:17:31,880 --> 00:17:35,180
So anything that
you're used to doing

363
00:17:35,180 --> 00:17:40,400
in Markdown works in theory
as long as the resulting HTML

364
00:17:40,400 --> 00:17:41,550
is actually supported.

365
00:17:41,550 --> 00:17:42,050
Right?

366
00:17:42,050 --> 00:17:44,090
So going forward,
what I need to do

367
00:17:44,090 --> 00:17:46,388
is I need to support
more HTML features.

368
00:17:46,388 --> 00:17:47,930
And actually, the
biggest issue right

369
00:17:47,930 --> 00:17:51,830
now is I need to
support more CSS,

370
00:17:51,830 --> 00:17:55,370
because that's the next
big stumbling block

371
00:17:55,370 --> 00:17:58,700
for a lot of obvious features
that you would want to have.

372
00:17:58,700 --> 00:18:00,620
And then the
markdown should just

373
00:18:00,620 --> 00:18:04,700
come by itself through the
existing markdown package.

374
00:18:04,700 --> 00:18:05,730
Awesome, thanks.

375
00:18:05,730 --> 00:18:06,230
All right.

376
00:18:06,230 --> 00:18:08,810
I was really happy to
see some glue in there,

377
00:18:08,810 --> 00:18:10,060
because I love that package.

378
00:18:10,060 --> 00:18:11,810
But we have some folks
in the audience who

379
00:18:11,810 --> 00:18:15,020
wanted to know, what is
the advantage of using glue

380
00:18:15,020 --> 00:18:17,780
over paste() or paste0()?

381
00:18:17,780 --> 00:18:20,380
So the advantage
of glue() over paste()

382
00:18:20,380 --> 00:18:24,110
is just that it may be slightly
easier to write, in particular

383
00:18:24,110 --> 00:18:26,340
if you have a lot of things.

384
00:18:26,340 --> 00:18:26,840
Right?

385
00:18:26,840 --> 00:18:30,620
So where was it?

386
00:18:30,620 --> 00:18:32,170
Somewhere here.

387
00:18:32,170 --> 00:18:33,595
Actually, let's
go to the colors.

388
00:18:37,540 --> 00:18:38,080
Sorry.

389
00:18:38,080 --> 00:18:40,532
I don't know the
way around my own--

390
00:18:40,532 --> 00:18:41,950
ah.

391
00:18:41,950 --> 00:18:44,050
I mean, paste() would
work just the same.

392
00:18:44,050 --> 00:18:46,030
If you like paste(), use paste().

393
00:18:46,030 --> 00:18:49,330
But I find this
very easy to read.

394
00:18:49,330 --> 00:18:53,540
These curly braces are
very low overhead, right?

395
00:18:53,540 --> 00:18:56,260
So it's very easy to just
look at the piece of text that

396
00:18:56,260 --> 00:18:59,290
comes out and says,
yes, this looks correct,

397
00:18:59,290 --> 00:19:03,490
versus with paste(), it gets a bit
more complicated to figure out

398
00:19:03,490 --> 00:19:05,650
what the final output
actually will be.

399
00:19:09,380 --> 00:19:11,120
Here's one about--

400
00:19:11,120 --> 00:19:14,150
do you have any tips
for incorporating

401
00:19:14,150 --> 00:19:17,780
non-standard fonts into
plots that might not

402
00:19:17,780 --> 00:19:19,930
be available on your machine?

403
00:19:19,930 --> 00:19:21,160
OK.

404
00:19:21,160 --> 00:19:24,790
So this-- first of all, this
package doesn't solve that.

405
00:19:24,790 --> 00:19:30,820
This package will work with
any font that works regularly

406
00:19:30,820 --> 00:19:32,870
in your R setup.

407
00:19:32,870 --> 00:19:35,620
Right? so the problem
of having other fonts--

408
00:19:35,620 --> 00:19:37,660
like Thomas is working on that.

409
00:19:37,660 --> 00:19:39,910
The long-term goal
is that any font

410
00:19:39,910 --> 00:19:43,930
that you have installed on
your machine should just work.

411
00:19:43,930 --> 00:19:48,370
And actually, on Macs, that
actually works reasonably well,

412
00:19:48,370 --> 00:19:49,510
honestly.

413
00:19:49,510 --> 00:19:53,680
Any font that the operating
system knows, I can use.

414
00:19:53,680 --> 00:19:57,640
Like I installed, actually,
Font Awesome from the web,

415
00:19:57,640 --> 00:20:00,090
and then I could put
little icons into plots.

416
00:20:00,090 --> 00:20:03,040
I didn't demonstrate that today,
but that worked just fine.

417
00:20:03,040 --> 00:20:06,640
So as long as R
supports the font,

418
00:20:06,640 --> 00:20:07,760
it will work in this case.

419
00:20:07,760 --> 00:20:10,630
But how to make that happen,
that's really for Thomas.

420
00:20:13,770 --> 00:20:14,270
Excellent.

421
00:20:14,270 --> 00:20:14,890
All right.

422
00:20:14,890 --> 00:20:18,450
And lastly, of course, where
are your slides available?

423
00:20:18,450 --> 00:20:20,740
Where can you be found for
the rest of the conference?

424
00:20:20,740 --> 00:20:22,115
I completely
forgot about that.

425
00:20:22,115 --> 00:20:25,180
So I actually tweeted
it out right before--

426
00:20:25,180 --> 00:20:26,540
actually, earlier this morning.

427
00:20:26,540 --> 00:20:30,700
So if you go @clauswilke,
that's my Twitter handle.

428
00:20:30,700 --> 00:20:32,740
And the last tweet I made--

429
00:20:32,740 --> 00:20:35,685
the second-to-last tweet
I made is the slides.

430
00:20:35,685 --> 00:20:36,520
All right.

431
00:20:36,520 --> 00:20:37,720
Thank you so much, Claus.

432
00:20:37,720 --> 00:20:42,270
[APPLAUSE]
